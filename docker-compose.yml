version: '3.9'

services:
  # Frontend
  app:
    container_name: DS2_Frontend
    build:
      context: ./DS2_Frontend
      dockerfile: Dockerfile
    env_file:
      - ./DS2_Frontend/.env
    volumes:
      - './DS2_Frontend:/app'
      - '/app/node_modules'
    stdin_open: true
    tty: true
    networks:
      customnetwork2:
        ipv4_address: 172.18.0.2
    restart: always

  # Database
  db:
    container_name: DS2_Database
    image: 'postgres'
    env_file:
      - ./DS2_Frontend/.env
      - ./DS2_Backend/.env
    environment:
      # POSTGRES_DB: ds2
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - data:/var/lib/postgresql
    ports:
      - '5432:5432'
    networks:
      customnetwork2:
        ipv4_address: 172.18.0.3
    restart: always

  # Backend
  api:
    container_name: DS2_Backend
    build:
      context: ./DS2_Backend
      dockerfile: Dockerfile
    env_file:
      - ./DS2_Backend/.env
    depends_on:
      - db
    ports:
      - '8000:8000'
    volumes:
      - /app/node_modules
      - ./DS2_Backend:/app
    networks:
      customnetwork2:
        ipv4_address: 172.18.0.4
    restart: always

  # Server
  server:
    container_name: Nginx_Server
    image: nginx
    depends_on:
      - api
      - app
      - db
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    ports:
      - '80:80'
      - '443:443'
    networks:
      customnetwork2:
        ipv4_address: 172.18.0.5
    volumes:
      - ./Nginx/Server_ssl/192.168.12.209.crt:/etc/nginx/192.168.12.209.crt
      - ./Nginx/Server_ssl/192.168.12.209.key:/etc/nginx/192.168.12.209.key
    restart: always

networks:
  customnetwork2:
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  data:
